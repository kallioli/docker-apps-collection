# Docker-compose mis à disposition par Kevin Allioli
# Date de mise à jour : 22/03/2021

# Variables d'environnement à déclarer :
#     - SERVICE : nom du service (exemple : plex)
#     - DATA_LOCATION : localisation des données (exemple /apps/"service")
#     - WS_ENABLED : activer les web_socket (exemple : true/false)
#     - DB_USER : nom utilisateur de la base de données
#     - DB_PASSWORD : mot de passe de la base de données
#     - DB_HOST : serveur de base de données
#     - DB_NAME : nom de la base de données
#     - SIGN_ALLOW : autoriser l'enregistrement d'utilisateurs
#     - DOMAINS_WHITELIST : nom de domaine en liste blanche
#     - SIGN_VERIFY : verification e-mail pour inscription
#     - SMTP_HOST : nom du serveur smtp 
#     - SMTP_FROM : adresse e-mail emettrice
#     - SMTP_FROM_NAME : nom d'envoi
#     - SMTP_PORT : port du serveur stmp
#     - SMTP_SSL : active le SSL ou non pour le smtp
#     - SMTP_TIMEOUT : temps d'attente maximum du serveur smtp
#     - TZ : Timezone du conteneur
#     - URL_LOKI : lien du serveur loki (exemple : ndd/loki/api/v1/push)
#     - NDD : lien du nom de domaine (exemple : papamica.fr)
#     - NETWORK_APP : nom du réseau applicatif

# Fonctionne avec Portainer

version: "2"
services:
  # Bitwarden : https://bitwarden.com/
  bitwarden:
    image: bitwardenrs/server
    container_name: $SERVICE
    restart: always
    volumes:
      - $DATA_LOCATION/bw-data:/data
    environment:
      WEBSOCKET_ENABLED: '$WS_ENABLED'
      DATABASE_URL: mysql://$DB_USER:$DB_PASSWORD@$DB_HOST:3306/$DB_NAME
      SIGNUPS_ALLOWED: '$SIGN_ALLOW'
      SIGNUPS_DOMAINS_WHITELIST: $DOMAINS_WHITELIST
      SIGNUPS_VERIFY: '$SIGN_VERIFY'
      SMTP_HOST: $SMTP_HOST
      SMTP_FROM: $SMTP_FROM
      SMTP_FROM_NAME: $SMTP_FROM_NAME
      SMTP_PORT: $SMTP_PORT
      SMTP_SSL: '$SMTP_SSL'
      SMTP_TIMEOUT: $SMTP_TIMEOUT
      DOMAIN: https://$NDD
      TZ: '$TZ'

    # Facultatif  
    logging:
      driver: loki
      options:
        loki-url: "$URL_LOKI"
        loki-external-labels: service={{.Name}}
    networks:
      - default
      - default1
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=$NETWORK_APP"
      - "traefik.http.routers.$SERVICE-ui.service=$SERVICE-ui"
      - "traefik.http.routers.$SERVICE-ui.rule=Host(`$NDD`)"
      - "traefik.http.routers.$SERVICE-ui.entrypoints=https"
      - "traefik.http.services.$SERVICE-ui.loadbalancer.server.port=80"
      - "traefik.http.routers.$SERVICE-websocket.entrypoints=https"
      - "traefik.http.routers.$SERVICE-websocket.service=$SERVICE-websocket"
      - "traefik.http.routers.$SERVICE-websocket.rule=Host(`$NDD`) && Path(`/notifications/hub`)"
      - "traefik.http.services.$SERVICE-websocket.loadbalancer.server.port=3012"
      
networks:
  default:
    external:
      name: $NETWORK_APP
  default1:
    external:
      name: $NETWORK_DATA