# Docker-compose provided by Kevin Allioli
# Last update : 03/05/2021

# Environment variables to declare :
#     - SERVICE : service name (example : vaultwarden)
#     - DATA_LOCATION : location of service data (example /app/"service")
#     - WS_ENABLED : enable web_socket (example : true/false)
#     - DB_USER : database user (example : vaultwarden)
#     - DB_PASS : database password
#     - DB_HOST : database hostname (example : mariadb)
#     - DB_NAME : database name (example : vaultwarden)
#     - SIGN_ALLOW : allow user registration
#     - DOMAINS_WHITELIST : whitelisted domain names (example: domain1.tld, domain2.tld)
#     - SIGN_VERIFY : e-mail verification for registration (example : true/false)
#     - SMTP_HOST : smtp hostname
#     - SMTP_FROM : sender address
#     - SMTP_FROM_NAME : sender name
#     - SMTP_PORT : smtp port
#     - SMTP_SSL : enable ssl on smtp connection (example: true/false)
#     - SMTP_TIMEOUT : maximum waiting time of the smtp server
#     - TZ : Container time zone
#     - URL_LOKI : loki service URL (example : http://ip:3100/loki/api/v1/push)
#     - FQDN : fully qualified domain name (example : vault.domain.tld)
#     - NETWORK_APP : application network name
#     - NETWORK_DATA : data network name

# Work with Portainer

version: "2"
services:
  vaultwarden:
    image: vaultwarden/server
    container_name: $SERVICE
    restart: always
    environment:
      WEBSOCKET_ENABLED: '$WS_ENABLED'
      DATABASE_URL: mysql://$DB_USER:$DB_PASS@$DB_HOST:3306/$DB_NAME
      SIGNUPS_ALLOWED: '$SIGN_ALLOW'
      SIGNUPS_DOMAINS_WHITELIST: $DOMAINS_WHITELIST
      SIGNUPS_VERIFY: '$SIGN_VERIFY'
      SMTP_HOST: $SMTP_HOST
      SMTP_FROM: $SMTP_FROM
      SMTP_FROM_NAME: $SMTP_FROM_NAME
      SMTP_PORT: $SMTP_PORT
      SMTP_SSL: '$SMTP_SSL'
      SMTP_TIMEOUT: $SMTP_TIMEOUT
      DOMAIN: https://$FQDN
      TZ: '$TZ'
      YUBICO_CLIENT_ID: 63520
      YUBICO_SECRET_KEY: qKFoF/J6axSj9OBt1MWTYS6WPHA=
    logging:
      driver: loki
      options:
        loki-url: "$URL_LOKI"
        loki-external-labels: service={{.Name}}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=$NETWORK_APP"
      - "traefik.http.routers.$SERVICE-ui.service=$SERVICE-ui"
      - "traefik.http.routers.$SERVICE-ui.rule=Host(`$NDD`)"
      - "traefik.http.routers.$SERVICE-ui.entrypoints=https"
      - "traefik.http.services.$SERVICE-ui.loadbalancer.server.port=80"
      - "traefik.http.routers.$SERVICE-websocket.entrypoints=https"
      - "traefik.http.routers.$SERVICE-websocket.service=$SERVICE-websocket"
      - "traefik.http.routers.$SERVICE-websocket.rule=Host(`$NDD`) && Path(`/notifications/hub`)"
      - "traefik.http.services.$SERVICE-websocket.loadbalancer.server.port=3012"
    volumes:
      - $DATA_LOCATION/bw-data:/data
    networks:
      - default
      - default1
    
networks:
  default:
    external:
      name: $NETWORK_APP
  default1:
    external:
      name: $NETWORK_DATA