# Docker-compose provided by Kevin Allioli
# Last update : 15/03/2022

# Environment variables to declare :
#     - SERVICE : name of the service (example : cachet)
#     - TZ : container time zone (example : Europe/Paris)
#     - DB_DRV : database driver (example : mysql, pgsql)
#     - DB_HOST : database server hostname (example : postgresql)
#     - DB_PORT : database server port (example: 3306, 5432)
#     - DB_NAME : database name (example : cachethq)
#     - DB_USER : database user (example : cachethq)
#     - DB_PASS : database password
#     - APP_KEY : application you have generated
#     - URL_LOKI : loki service URL (example : http://ip:3100/loki/api/v1/push)
#     - FQDN : fully qualified domain name (example : status.domain.tld)
#     - NETWORK_APP : application network name
#     - NETWORK_DATA : data network name

# Work with portainer

version: "2"
services:
  cachet:
    image: cachethq/docker
    container_name: $SERVICE
    restart: unless-stopped
    environment:
      - TZ=$TZ
      - DB_DRIVER=$DB_DRV
      - DB_HOST=$DB_HOST
      - DB_PORT=$DB_PORT
      - DB_DATABASE=$DB_NAME
      - DB_USERNAME=$DB_USER
      - DB_PASSWORD=$DB_PASS
      - APP_KEY=$APP_KEY
      - APP_LOG=errorlog
      - APP_ENV=${APP_ENV:-production}
      - APP_DEBUG=false
      - DEBUG=false
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 1m
      timeout: 30s
      retries: 3
    logging:
      driver: loki
      options:
        loki-url: "$URL_LOKI"
        loki-external-labels: service={{.Name}}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.$SERVICE.entrypoints=https"
      - "traefik.http.routers.$SERVICE.rule=Host(`$FQDN`)"
      - "traefik.http.services.$SERVICE.loadbalancer.server.port=8000"
      - "traefik.docker.network=$NETWORK_APP"
#    volumes:
#      - $DATA_LOCATION/data:/var/www/html/
    networks:
      - default
      - default1

networks:
  default:
    name: ${NETWORK_APP:-tmp}
  default1:
    name: ${NETWORK_DATA:-tmp}